#!/usr/bin/perl

use strict;
use warnings;
use threads;
use IO::Handle;

sub _read {
	my ($_dir, $_file) = @_;
	my $_path_file = sprintf("%s/%s.log", $_dir, $_file);
	my $_fifo_fh;
	open($_fifo_fh, "+< $_path_file") || die "KO";

	while (<$_fifo_fh>)
	{
		printf ("%s : %s", $_file, $_);
		select()->flush();
	}
	close $_fifo_fh;
	exit (0);
}

my $_path = "/var/log/xymon/";

threads->new(\&_read, $_path, "acknowledge");
threads->new(\&_read, $_path, "alert");
threads->new(\&_read, $_path, "clientdata");
threads->new(\&_read, $_path, "combostatus");
threads->new(\&_read, $_path, "history");
threads->new(\&_read, $_path, "hostdata");
threads->new(\&_read, $_path, "notifications");
threads->new(\&_read, $_path, "rrd-data");
threads->new(\&_read, $_path, "rrd-status");
threads->new(\&_read, $_path, "xymonclient");
threads->new(\&_read, $_path, "xymond");
threads->new(\&_read, $_path, "xymongen");
threads->new(\&_read, $_path, "xymonlaunch");
threads->new(\&_read, $_path, "xymonnet");
threads->new(\&_read, $_path, "xymonnetagain");

while (threads->list(threads::running) == 15) {
	sleep (1);
}

exit;
